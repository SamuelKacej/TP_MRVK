<launch>
    <arg name="model" default="$(find mrvk_description)/urdf/robot.urdf.xacro"/>
    <arg name="world_file" default="$(find mrvk_gazebo)/worlds/empty.world"/>
    <!-- <arg name="world_file" default="$(find mrvk_gazebo)/worlds/turtlebot3_world.world"/> -->
    <!-- <arg name="world_file" default="$(find mrvk_gazebo)/worlds/example.world"/> -->
    <!--arg name="world_file" default="$(find mrvk_gazebo)/worlds/baylands.world"/-->

    <include file="$(find mrvk_gazebo)/launch/gazebo.launch">
        <arg name="model" value="$(arg model)" />
        <arg name="world_file" value="$(arg world_file)" />
    </include>

    <rosparam command="load" 
        file="$(find mrvk_description)/config/gmapping_config.yaml"/>

    <node name="mrvk_controller_spawner" pkg="controller_manager" type="spawner"
        args="mrvk_diff_drive_controller
            --shutdown-timeout 3"/>

    <node name="rqt_robot_steering" pkg="rqt_robot_steering" type="rqt_robot_steering">
        <param name="default_topic" value="/shoddy/cmd_vel"/>
    </node>

    <node name="image_view" pkg="image_view" type="image_view" args="image:=/camera/image_raw"/>

    <node name="slam_gmapping" pkg="gmapping" type="slam_gmapping">
        <remap from="/scan" to="/scan"/>
    </node>

    <node name="imu_quat_to_eul" pkg="imu_quat_to_eul" type="imu_quat_to_eul_node.py" />

    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
        <rosparam file="$(find mrvk_gazebo)/cost_map/costmap_common.yaml" command="load" ns="global_costmap"/> 
        <rosparam file="$(find mrvk_gazebo)/cost_map/costmap_common.yaml" command="load" ns="local_costmap"/>
        <rosparam file="$(find mrvk_gazebo)/cost_map/local_costmap.yaml" command="load" />
        <rosparam file="$(find mrvk_gazebo)/cost_map/global_costmap.yaml" command="load" /> 
        <rosparam file="$(find mrvk_gazebo)/cost_map/base_local_planner.yaml" command="load" />
        <remap from="/cmd_vel" to="/shoddy/cmd_vel"/>
    </node>
</launch>
